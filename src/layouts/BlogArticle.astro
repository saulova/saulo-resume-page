---
import { getCollection } from "astro:content"
import type { CollectionEntry } from "astro:content"
import { formatDate, readingTime } from "@/lib/utils"
import { Image } from "astro:assets"

import PrevAndNextArticleButtons from "@/components/PrevAndNextArticleButtons.astro"

type Props = {
  entry: CollectionEntry<"blog">
}

const { entry } = Astro.props
const { collection, data, body } = entry
const { title, date, cover } = data
const { Content } = await entry.render()

const items = (await getCollection(collection))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())

const index = items.findIndex(x => x.slug === entry.slug)

const prev = items[(index - 1 + items.length) % items.length]
const next = items[(index + 1) % items.length]
---
<div class="pt-24 pb-5">
  <div>
    <a href={`/${collection}`} class="group w-fit p-1.5 gap-1.5 text-sm flex items-center border-2 rounded hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white">
        <line x1="19" y1="12" x2="5" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-3 group-hover:translate-x-0 transition-all duration-300 ease-in-out" />
        <polyline points="12 19 5 12 12 5" class="translate-x-1 group-hover:translate-x-0 transition-all duration-300 ease-in-out" />
      </svg>
      <div class="w-full group-hover:text-black group-hover:dark:text-white transition-colors duration-300 ease-in-out">
        Voltar ao {collection}
      </div>
    </a>
    <div class="flex flex-wrap text-sm uppercase mt-12 gap-3 opacity-75">
      <div class="flex items-center gap-2">
        <svg class="size-5 stroke-current">
          <use href="/ui.svg#calendar"/>
        </svg>
        {formatDate(date)}
      </div>
      <div class="flex items-center gap-2">
        <svg class="size-5 stroke-current">
          <use href="/ui.svg#book-open"/>
        </svg>
        {readingTime(body)}
      </div>
    </div>
    <h1 class="text-3xl font-semibold text-black dark:text-white mt-2">
      {title}
    </h1>
    <div class="flex mx-auto justify-center mt-10">
      <Image
        src={cover}
        alt={title}
        class="object-cover object-center !m-0 aspect-auto block rounded-lg mx-auto"
        width={600}
        height={600}
      />
    </div>
  </div>
</div>
<div class="flex-1 pb-5">
  <div>
    <article>
      <Content />
    </article>

    <PrevAndNextArticleButtons prev={prev} next={next} />
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/mermaid@11/dist/mermaid.min.js" is:inline></script>
<script type="module">
  (async function () {
    const graphs = document.getElementsByClassName("mermaid")

    if (graphs.length > 0) {
      mermaid.initialize({
        startOnLoad: false,
        fontFamily: "var(--sans-font)",
        theme: "neutral",
      })

      for (const graph of graphs) {
        const content = graph.getAttribute("data-content")

        if (!content) continue

        let svg = document.createElement("svg")

        const id = (svg.id = "mermaid-" + Math.round(Math.random() * 100000))

        graph.appendChild(svg)

        const {svg: result} = await mermaid.render(id, content)

        graph.innerHTML = result
      }
    }
  })()
</script>